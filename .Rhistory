file.edit("直播计划.md")
file.edit("r/01-r-intro.Rmd")
# 这是一行注释
# 说明代码的用途
res <- 2 + 4 * 3
print(res)
2 + 6 -> res2
res
2 + 6 -> res2
res2
a = 6
if (a > 3) {
print("a 比 3 大")
}
b <- {
a <- 5
a + 5
}
print(b)
if (exists("b")) rm(b)
b <- {
a <- 5
a <- a + 5
}
print(b)
c <- {
a <- 5
a <- a + 5
}
print(c)
a <- 2
if (a > 3) {
print("a 比 3 大")
} else {
print("a 比 3 小")
}
a <- 6
if (a > 3)
print("a 比 3 大")
a <- 2
if (a > 3) print("a 比 3 大") else print("a 比 3 小但比 0 大")
a <- 2
if (a > 3) print("a 比 3 大")
else
?switch
.Library
require(stats)
centre <- function(x, type) {
switch(type,
mean = mean(x),
median = median(x),
trimmed = mean(x, trim = .1))
}
x <- rcauchy(10)
x
1:100
1:10
for (i in 1:9) {
print(i)
}
for (i in 9) {
print(i)
}
a = 1:10
b = length(a)
for (i in b) {
print(i)
}
a = 1:10
b = length(a)
for (i in seq_len(b)) {
print(i)
}
seq(1, 10)
1:10
seq(1, 10, 2)
a <- letters[1:5]
a
seq_along(a)
seq_len(8)
i <- 1
while(i <= 9) {
i <- i + 0.3
}
print(i)
rm(a)
ls()
rm(list = ls())
class(1)
class("a")
mode(5)
class(5)
typeof(5)
class(5L)
class(5)
class(5.0)
typeof(5L)
sum(1:10)
log10(1:10)
a = 1:10
b = 2:12
sum(a)
sum(b)
s <- 0
for (i in a) {
s <- i + s
}
print(s)
library("xxx")
require("xxx")
require(xxx)
require(xxx) -> a
a
file.edit("R/README.md")
file.edit("r/02-r-intro.R")
c(1, 2, 3)
multi
multi <- c(1, "A", TRUE)
multi
c(1, TRUE)
c(1, FALSE)
c(1, 1L)
is.integer(c(1, 1L))
is.integer(c(2L, 1L))
"A":"Z"
seq(1.1, 20.1, by = 1.1)
rep("A", 10)
rep(TRUE, 10)
length(rep("A", 10))
1:12
# Construct a matrix
m1 <- matrix(
data = 1:12,
nrow = 3,
ncol = 4)
m1 <- matrix(1:12, 3, 4)
m1
matrix(1:12, 3, 4,
dimnames = list(
c("A", "B", "C"),
c("a", "b", "c", "d")
))
matrix(1:12, 3, 4, byrow = TRUE)
m1 <- matrix(1:12, 3, 4,
dimnames = list(
c("A", "B", "C"),
c("a", "b", "c", "d")
))
m1
dim(m1)  # dimension
nrow(m1)
ncol(m1)
dimnames(m1)
rownames(m1)
colnames(m1)
m1
m1[1, 3]
m1[1, ]
m1[2, ]
m1[, 2]
m1[1:2, 1:2]
m1[c(1, 3), 1:2]
dim(m1)  # dimension
m1
dim(m1)  # dimension
dim(m1) <- c(2, 6)
m1
nrow(m1)
nrow(m1) <- 1
`dim<-`
ncol(m1) <- 2
dimnames(m1)
# Construct an array
ar <- array(
1:12,
c(2, 3, 4)
)
ar
ar[2, 2, 1]
# Construct a list
c(1, TRUE, "A")
list(1, TRUE, "A")
a_list <- list(
c(1, 2),
matrix(1:12, 3, 4),
list(1, 2, TRUE)
)
a_list
a_list[[1]]
a_list[1]
names(a_list)
names(a_list) <- c("a", "b", "c")
a_list
a_list$a
a_list[[1]]
a_vec = 1:10
a_vec
names(a_vec) <- letters[1:10]
a_vec
a_vec[2]
a_vec['b']
# Construct a data.frame
stu <- LETTERS[1:4]
height <- c(172, 168, 155, 180)
score <- 92:95
pass <- TRUE
stu
student <- data.frame(
name = stu,
height = height,
score = score,
pass = pass
)
student
is.list(student)
is.data.frame(student)
data.frame(
name = stu,
height = c(height, 199),
score = score,
pass = pass
)
pass
c(1, 2, 3, 4) > 1
#
c(1, 2, 3, 4) > c(1, 1, 1, 1)
c(1, 2, 3, 4) > c(1, 1, 1, 1, 1)
student
student$score
student[1:2, ]
student[, c("score", "pass")]
rownames(student)
student[c("1", "2"), ]
# Construct a factor
sex <- sample(
c("Male", "Female"),
100,
replace = TRUE
)
sex
sex <- c(sex, "others")
sex
factor(
sex,
levels = c("Male", "Female")
)
fsex <- factor(
sex,
levels = c("Male", "Female")
)
fsex
fsex
str(fsex)
sex[1:10]
factor(
sex
)
sex <- sample(
c("A", "B"),
100,
replace = TRUE
)
sex
fsex <- factor(
sex,
levels = c("Male", "Female")
)
fsex
fsex <- factor(
sex,
levels = c("A", "B"),
labels = c("Male", "Female")
)
str(fsex)
"B" > "A"
# datetime
"2016" > "2015"
as.Date("2015-06-01")
str(as.Date("2015-06-01"))
"B" - "A"
as.Date("2015-06-01") - as.Date("2015-05-29")
c(1, TRUE)
as.integer(TRUE)
#is.*
as.integer("3")
as.character(3L)
student <- data.frame(
name = stu,
height = height,
score = score,
pass = pass
)
student
student2 <- student[1:2, ]
student3 <- student[3:4], ]
student3 <- student[3:4, ]
student2
student3
rbind(student2, student3)
student_1 <- student[, 1:2]
student_2 <- student[, 3:4]
student_1
student_2
cbind(student_1, student_2)
+Inf
student
student$score
student$score[2] <- NA
student
student$pass <- NULL
student
sum <- function(x) {
s <- 0
for (i in x) {
s <- s + i
}
return(s)
}
sum2 <- function(x) {
s <- 0
for (i in x) {
s <- s + i
}
return(s)
}
sum2(1:10)
sum3 <- function(x) {s <- 0;
for (i in x) {s <- s + i}
return(s)
}
sum3(1:10)
a <- 1; b <- 2
