print(s)
library("xxx")
require("xxx")
require(xxx)
require(xxx) -> a
a
file.edit("R/README.md")
file.edit("r/02-r-intro.R")
c(1, 2, 3)
multi
multi <- c(1, "A", TRUE)
multi
c(1, TRUE)
c(1, FALSE)
c(1, 1L)
is.integer(c(1, 1L))
is.integer(c(2L, 1L))
"A":"Z"
seq(1.1, 20.1, by = 1.1)
rep("A", 10)
rep(TRUE, 10)
length(rep("A", 10))
1:12
# Construct a matrix
m1 <- matrix(
data = 1:12,
nrow = 3,
ncol = 4)
m1 <- matrix(1:12, 3, 4)
m1
matrix(1:12, 3, 4,
dimnames = list(
c("A", "B", "C"),
c("a", "b", "c", "d")
))
matrix(1:12, 3, 4, byrow = TRUE)
m1 <- matrix(1:12, 3, 4,
dimnames = list(
c("A", "B", "C"),
c("a", "b", "c", "d")
))
m1
dim(m1)  # dimension
nrow(m1)
ncol(m1)
dimnames(m1)
rownames(m1)
colnames(m1)
m1
m1[1, 3]
m1[1, ]
m1[2, ]
m1[, 2]
m1[1:2, 1:2]
m1[c(1, 3), 1:2]
dim(m1)  # dimension
m1
dim(m1)  # dimension
dim(m1) <- c(2, 6)
m1
nrow(m1)
nrow(m1) <- 1
`dim<-`
ncol(m1) <- 2
dimnames(m1)
# Construct an array
ar <- array(
1:12,
c(2, 3, 4)
)
ar
ar[2, 2, 1]
# Construct a list
c(1, TRUE, "A")
list(1, TRUE, "A")
a_list <- list(
c(1, 2),
matrix(1:12, 3, 4),
list(1, 2, TRUE)
)
a_list
a_list[[1]]
a_list[1]
names(a_list)
names(a_list) <- c("a", "b", "c")
a_list
a_list$a
a_list[[1]]
a_vec = 1:10
a_vec
names(a_vec) <- letters[1:10]
a_vec
a_vec[2]
a_vec['b']
# Construct a data.frame
stu <- LETTERS[1:4]
height <- c(172, 168, 155, 180)
score <- 92:95
pass <- TRUE
stu
student <- data.frame(
name = stu,
height = height,
score = score,
pass = pass
)
student
is.list(student)
is.data.frame(student)
data.frame(
name = stu,
height = c(height, 199),
score = score,
pass = pass
)
pass
c(1, 2, 3, 4) > 1
#
c(1, 2, 3, 4) > c(1, 1, 1, 1)
c(1, 2, 3, 4) > c(1, 1, 1, 1, 1)
student
student$score
student[1:2, ]
student[, c("score", "pass")]
rownames(student)
student[c("1", "2"), ]
# Construct a factor
sex <- sample(
c("Male", "Female"),
100,
replace = TRUE
)
sex
sex <- c(sex, "others")
sex
factor(
sex,
levels = c("Male", "Female")
)
fsex <- factor(
sex,
levels = c("Male", "Female")
)
fsex
fsex
str(fsex)
sex[1:10]
factor(
sex
)
sex <- sample(
c("A", "B"),
100,
replace = TRUE
)
sex
fsex <- factor(
sex,
levels = c("Male", "Female")
)
fsex
fsex <- factor(
sex,
levels = c("A", "B"),
labels = c("Male", "Female")
)
str(fsex)
"B" > "A"
# datetime
"2016" > "2015"
as.Date("2015-06-01")
str(as.Date("2015-06-01"))
"B" - "A"
as.Date("2015-06-01") - as.Date("2015-05-29")
c(1, TRUE)
as.integer(TRUE)
#is.*
as.integer("3")
as.character(3L)
student <- data.frame(
name = stu,
height = height,
score = score,
pass = pass
)
student
student2 <- student[1:2, ]
student3 <- student[3:4], ]
student3 <- student[3:4, ]
student2
student3
rbind(student2, student3)
student_1 <- student[, 1:2]
student_2 <- student[, 3:4]
student_1
student_2
cbind(student_1, student_2)
+Inf
student
student$score
student$score[2] <- NA
student
student$pass <- NULL
student
sum <- function(x) {
s <- 0
for (i in x) {
s <- s + i
}
return(s)
}
sum2 <- function(x) {
s <- 0
for (i in x) {
s <- s + i
}
return(s)
}
sum2(1:10)
sum3 <- function(x) {s <- 0;
for (i in x) {s <- s + i}
return(s)
}
sum3(1:10)
a <- 1; b <- 2
file.edit("r/03-ds-basic.R")
file.edit("r/test1.csv")
read.table("r/test1.csv")
?read.table
read.table(
"r/test1.csv",
header = TRUE,
sep = ","
)
test1 <- read.table(
"r/test1.csv",
header = TRUE,
sep = ","
)
str(test1)
read.csv("r/test1.csv")
test1_2 <- read.csv("r/test1.csv")
all.equal(test1, test1_2)
read.csv
read.csv3 <- function(file,
header = TRUE,
...) {
read.table(
file,
header = header,
sep = ",",
...
)
}
test1_3 <- read.csv3("r/test1.csv")
all.equal(test1_2, test1_3)
test1_4 <- readr::read_csv(
"r/test1.csv"
)
str(test1_4)
str(test1_3)
test1_5 <- readr::read_csv(
"r/test1.csv",
col_types = readr::cols()
)
test1_4 <- readr::read_csv(
"r/test1.csv"
)
identical(test1_4, test1_5)
test1
class(test1)
class(test1_5)
test1
test1_5
test1
test1$score <- as.character(test1$score)
test1
str(test1)
test1_5
test1_5$score <- as.character(test1_5$score)
test1_5
test1
write.table(
test1,
file = "r/test.txt",
sep = "\t"
)
write.table(
test1,
file = "r/test.txt",
sep = "\t",
quote = FALSE
)
readr::read_tsv("r/test.txt")
write.table(
test1,
file = "r/test.txt",
sep = "\t",
row.names = FALSE,
quote = FALSE
)
readr::read_tsv("r/test.txt")
library(readr)
read_delim("r/test1.xx", delim = " ABC ")
read_lines("r/test1.xx")
x <- read_lines("r/test1.xx")
gsub(" ABC ", ",", x)
?read_tsv
default_locale()
read_file("r/test1.xx")
x2 <- read_file("r/test1.xx")
x
x2
library(tidyverse)
mtcars
## 管道 %>%
# Unix |
sum(1:10)
1:10 %>% sum
mtcars
## 取子集
mtcars %>% filer(gear == 4)
## 取子集
mtcars %>% filter(gear == 4)
mtcars %>%
filter(gear == 4) %>%
nrow()
norw(filter(mtcar, gear == 4))
nrow(filter(mtcar, gear == 4))
nrow(filter(mtcars, gear == 4))
colnames(mtcars)
mtcars %>%
select(mpg, cyl)
## 描述
summary(mtcars)
glimpse(mtcars)
?set
?setdiff()
intersect(a, b)
a <- c("A", "B", "C")
b <- c("B", "C", "D")
intersect(a, b)
union(a, b)
setdiff(a, b)
setdiff(b, a)
setequal(a, b)
data1 <- mtcars %>%
select(mpg, cyl) %>%
head(4)
data1
data2 <- mtcars %>%
select(mpg, cyl) %>%
slice(2:5)
data2
data1
data2
data1[2:4,]
intersect(data1, data2)
## 连接操作 join
# 数据库
test1
test2 <- data.frame(
stu = c("B", "C", "D"),
class = c("a", "b", "c")
)
test1
test2
full_join(
test1,
test2
)
full_join(
test1,
test2,
by = "stu"
)
left_join(
test1,
test2,
by = "stu"
)
test1
right_join(
test1,
test2,
by = "stu"
)
semi_join(
test1,
test2,
by = "stu"
)
test1
test2
anti_join(
test1,
test2,
by = "stu"
)
test1
test2
## 列修改
test1 %>%
mutate(
class = c("a", "b", "c")
)
test1 %>%
mutate(
stu = c("a", "b", "c")
)
?merge
## 排序
test1 %>%
arrange(score)
test1 %>%
arrange(desc(score))
## 计数
test1 %>%
count("stu")
## 计数
test1 %>%
count(stu)
## 记录添加
test1
## 记录添加
test1 %>%
add_row(stu = "D", score = 100)
?add_row
str(test)
str(testq1)
str(test1)
## 记录添加
test1 %>%
add_row(stu = "D", score = "100")
test1 %>%
mutate(
stu = c("a", "b", "c")
)
test1 %>%
mutate(
stu = c("a", "b", "c")
)
test1 %>%
transmute(
stu = c("a", "b", "c")
)
mtcars
mtcars %>%
group_by(gear) %>%
summarise(
wt_mean = mean(wt)
)
?summarise_each
mtcars %>%
group_by(gear) %>%
summarise_each(
list(
mean = mean,
sd = sd
)
)
mtcars %>%
group_by(gear, vs) %>%
summarise(
wt_mean = mean(wt)
)
## 数据变换
cumsum(1:10)
test1
test1 %>%
mutate(
rowid = row_number()
)
## 基因表达矩阵
expr <- matrix(
rnorm(1000),
100, 10
)
expr
## 基因表达矩阵
expr <- matrix(
rnorm(1000),
100, 10,
dimnames = list(
paste0("Gene", 1:100),
paste0("Sample", 1:10)
)
)
expr[1:5, 1:5]
apply(expr, 1, mean)
apply(expr, 2, mean)
rowMeans(expr)
identical(
apply(expr, 1, mean),
rowMeans(expr)
)
mean2 <- function(...) {
mean(...)
}
identical(
apply(expr, 1, mean2),
rowMeans(expr)
)
a_list <- list(
1:10,
2:5,
3
)
str(a_list)
lapply(a_list, mean)
sapply(a_list, mean) # simplified lapply
?tapply
